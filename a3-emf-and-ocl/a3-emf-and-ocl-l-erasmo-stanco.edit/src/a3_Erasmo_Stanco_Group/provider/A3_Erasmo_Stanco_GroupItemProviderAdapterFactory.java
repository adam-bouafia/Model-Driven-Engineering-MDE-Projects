/**
 */
package a3_Erasmo_Stanco_Group.provider;

import a3_Erasmo_Stanco_Group.util.A3_Erasmo_Stanco_GroupAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class A3_Erasmo_Stanco_GroupItemProviderAdapterFactory extends A3_Erasmo_Stanco_GroupAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public A3_Erasmo_Stanco_GroupItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.ErasmusProgram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErasmusProgramItemProvider erasmusProgramItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.ErasmusProgram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErasmusProgramAdapter() {
		if (erasmusProgramItemProvider == null) {
			erasmusProgramItemProvider = new ErasmusProgramItemProvider(this);
		}

		return erasmusProgramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Scholarship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScholarshipItemProvider scholarshipItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Scholarship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScholarshipAdapter() {
		if (scholarshipItemProvider == null) {
			scholarshipItemProvider = new ScholarshipItemProvider(this);
		}

		return scholarshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.University} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversityItemProvider universityItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.University}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversityAdapter() {
		if (universityItemProvider == null) {
			universityItemProvider = new UniversityItemProvider(this);
		}

		return universityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Course} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CourseItemProvider courseItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Course}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCourseAdapter() {
		if (courseItemProvider == null) {
			courseItemProvider = new CourseItemProvider(this);
		}

		return courseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Location} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Location}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.AssociatePartner} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociatePartnerItemProvider associatePartnerItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.AssociatePartner}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociatePartnerAdapter() {
		if (associatePartnerItemProvider == null) {
			associatePartnerItemProvider = new AssociatePartnerItemProvider(this);
		}

		return associatePartnerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.AdmissionStructure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdmissionStructureItemProvider admissionStructureItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.AdmissionStructure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdmissionStructureAdapter() {
		if (admissionStructureItemProvider == null) {
			admissionStructureItemProvider = new AdmissionStructureItemProvider(this);
		}

		return admissionStructureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Results} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResultsItemProvider resultsItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Results}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResultsAdapter() {
		if (resultsItemProvider == null) {
			resultsItemProvider = new ResultsItemProvider(this);
		}

		return resultsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Requirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementItemProvider requirementItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Requirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementAdapter() {
		if (requirementItemProvider == null) {
			requirementItemProvider = new RequirementItemProvider(this);
		}

		return requirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.DocumentRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRequirementItemProvider documentRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.DocumentRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRequirementAdapter() {
		if (documentRequirementItemProvider == null) {
			documentRequirementItemProvider = new DocumentRequirementItemProvider(this);
		}

		return documentRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.DegreeRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DegreeRequirementItemProvider degreeRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.DegreeRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDegreeRequirementAdapter() {
		if (degreeRequirementItemProvider == null) {
			degreeRequirementItemProvider = new DegreeRequirementItemProvider(this);
		}

		return degreeRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.LanguageRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LanguageRequirementItemProvider languageRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.LanguageRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLanguageRequirementAdapter() {
		if (languageRequirementItemProvider == null) {
			languageRequirementItemProvider = new LanguageRequirementItemProvider(this);
		}

		return languageRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.ApplicationProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationProcessItemProvider applicationProcessItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.ApplicationProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationProcessAdapter() {
		if (applicationProcessItemProvider == null) {
			applicationProcessItemProvider = new ApplicationProcessItemProvider(this);
		}

		return applicationProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link a3_Erasmo_Stanco_Group.Step} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StepItemProvider stepItemProvider;

	/**
	 * This creates an adapter for a {@link a3_Erasmo_Stanco_Group.Step}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStepAdapter() {
		if (stepItemProvider == null) {
			stepItemProvider = new StepItemProvider(this);
		}

		return stepItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (erasmusProgramItemProvider != null) erasmusProgramItemProvider.dispose();
		if (scholarshipItemProvider != null) scholarshipItemProvider.dispose();
		if (universityItemProvider != null) universityItemProvider.dispose();
		if (courseItemProvider != null) courseItemProvider.dispose();
		if (locationItemProvider != null) locationItemProvider.dispose();
		if (associatePartnerItemProvider != null) associatePartnerItemProvider.dispose();
		if (admissionStructureItemProvider != null) admissionStructureItemProvider.dispose();
		if (resultsItemProvider != null) resultsItemProvider.dispose();
		if (requirementItemProvider != null) requirementItemProvider.dispose();
		if (documentRequirementItemProvider != null) documentRequirementItemProvider.dispose();
		if (degreeRequirementItemProvider != null) degreeRequirementItemProvider.dispose();
		if (languageRequirementItemProvider != null) languageRequirementItemProvider.dispose();
		if (applicationProcessItemProvider != null) applicationProcessItemProvider.dispose();
		if (stepItemProvider != null) stepItemProvider.dispose();
	}

}
