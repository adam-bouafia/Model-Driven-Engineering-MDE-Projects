/*
 * generated by Xtext 2.33.0
 */
grammar InternalErasmusPrograms;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.mde.a5.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.mde.a5.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.mde.a5.services.ErasmusProgramsGrammarAccess;

}

@parser::members {

 	private ErasmusProgramsGrammarAccess grammarAccess;

    public InternalErasmusProgramsParser(TokenStream input, ErasmusProgramsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ErasmusProgram";
   	}

   	@Override
   	protected ErasmusProgramsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleErasmusProgram
entryRuleErasmusProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErasmusProgramRule()); }
	iv_ruleErasmusProgram=ruleErasmusProgram
	{ $current=$iv_ruleErasmusProgram.current; }
	EOF;

// Rule ErasmusProgram
ruleErasmusProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ErasmusProgram'
		{
			newLeafNode(otherlv_0, grammarAccess.getErasmusProgramAccess().getErasmusProgramKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getErasmusProgramAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getErasmusProgramRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getErasmusProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='totalCredits'
		{
			newLeafNode(otherlv_3, grammarAccess.getErasmusProgramAccess().getTotalCreditsKeyword_3());
		}
		(
			(
				lv_totalCredits_4_0=RULE_INT
				{
					newLeafNode(lv_totalCredits_4_0, grammarAccess.getErasmusProgramAccess().getTotalCreditsINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getErasmusProgramRule());
					}
					setWithLastConsumed(
						$current,
						"totalCredits",
						lv_totalCredits_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_5='universities'
			{
				newLeafNode(otherlv_5, grammarAccess.getErasmusProgramAccess().getUniversitiesKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getErasmusProgramAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getErasmusProgramAccess().getUniversitiesUniversityParserRuleCall_5_2_0());
					}
					lv_universities_7_0=ruleUniversity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
						}
						add(
							$current,
							"universities",
							lv_universities_7_0,
							"org.xtext.mde.a5.ErasmusPrograms.University");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getErasmusProgramAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getErasmusProgramAccess().getUniversitiesUniversityParserRuleCall_5_3_1_0());
						}
						lv_universities_9_0=ruleUniversity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
							}
							add(
								$current,
								"universities",
								lv_universities_9_0,
								"org.xtext.mde.a5.ErasmusPrograms.University");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getErasmusProgramAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_11='scholarships'
			{
				newLeafNode(otherlv_11, grammarAccess.getErasmusProgramAccess().getScholarshipsKeyword_6_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getErasmusProgramAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getErasmusProgramAccess().getScholarshipsScholarshipParserRuleCall_6_2_0());
					}
					lv_scholarships_13_0=ruleScholarship
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
						}
						add(
							$current,
							"scholarships",
							lv_scholarships_13_0,
							"org.xtext.mde.a5.ErasmusPrograms.Scholarship");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getErasmusProgramAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getErasmusProgramAccess().getScholarshipsScholarshipParserRuleCall_6_3_1_0());
						}
						lv_scholarships_15_0=ruleScholarship
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
							}
							add(
								$current,
								"scholarships",
								lv_scholarships_15_0,
								"org.xtext.mde.a5.ErasmusPrograms.Scholarship");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getErasmusProgramAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_17='associatePartners'
			{
				newLeafNode(otherlv_17, grammarAccess.getErasmusProgramAccess().getAssociatePartnersKeyword_7_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getErasmusProgramAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getErasmusProgramAccess().getAssociatePartnersAssociatePartnerParserRuleCall_7_2_0());
					}
					lv_associatePartners_19_0=ruleAssociatePartner
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
						}
						add(
							$current,
							"associatePartners",
							lv_associatePartners_19_0,
							"org.xtext.mde.a5.ErasmusPrograms.AssociatePartner");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getErasmusProgramAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getErasmusProgramAccess().getAssociatePartnersAssociatePartnerParserRuleCall_7_3_1_0());
						}
						lv_associatePartners_21_0=ruleAssociatePartner
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
							}
							add(
								$current,
								"associatePartners",
								lv_associatePartners_21_0,
								"org.xtext.mde.a5.ErasmusPrograms.AssociatePartner");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getErasmusProgramAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_23='admissionStructure'
		{
			newLeafNode(otherlv_23, grammarAccess.getErasmusProgramAccess().getAdmissionStructureKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getErasmusProgramAccess().getAdmissionStructureAdmissionStructureParserRuleCall_9_0());
				}
				lv_admissionStructure_24_0=ruleAdmissionStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getErasmusProgramRule());
					}
					set(
						$current,
						"admissionStructure",
						lv_admissionStructure_24_0,
						"org.xtext.mde.a5.ErasmusPrograms.AdmissionStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getErasmusProgramAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleScholarship
entryRuleScholarship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScholarshipRule()); }
	iv_ruleScholarship=ruleScholarship
	{ $current=$iv_ruleScholarship.current; }
	EOF;

// Rule Scholarship
ruleScholarship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScholarshipAccess().getTypeScholarshipTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleScholarshipType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScholarshipRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.mde.a5.ErasmusPrograms.ScholarshipType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getScholarshipAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='tuitionFee'
		{
			newLeafNode(otherlv_2, grammarAccess.getScholarshipAccess().getTuitionFeeKeyword_2());
		}
		(
			(
				lv_tuitionFee_3_0=RULE_INT
				{
					newLeafNode(lv_tuitionFee_3_0, grammarAccess.getScholarshipAccess().getTuitionFeeINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScholarshipRule());
					}
					setWithLastConsumed(
						$current,
						"tuitionFee",
						lv_tuitionFee_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='travelGrant'
		{
			newLeafNode(otherlv_4, grammarAccess.getScholarshipAccess().getTravelGrantKeyword_4());
		}
		(
			(
				lv_travelGrant_5_0=RULE_INT
				{
					newLeafNode(lv_travelGrant_5_0, grammarAccess.getScholarshipAccess().getTravelGrantINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScholarshipRule());
					}
					setWithLastConsumed(
						$current,
						"travelGrant",
						lv_travelGrant_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='allowance'
		{
			newLeafNode(otherlv_6, grammarAccess.getScholarshipAccess().getAllowanceKeyword_6());
		}
		(
			(
				lv_allowance_7_0=RULE_INT
				{
					newLeafNode(lv_allowance_7_0, grammarAccess.getScholarshipAccess().getAllowanceINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScholarshipRule());
					}
					setWithLastConsumed(
						$current,
						"allowance",
						lv_allowance_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getScholarshipAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleUniversity
entryRuleUniversity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniversityRule()); }
	iv_ruleUniversity=ruleUniversity
	{ $current=$iv_ruleUniversity.current; }
	EOF;

// Rule University
ruleUniversity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='University'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniversityAccess().getUniversityKeyword_0());
		}
		(
			(
				lv_universityName_1_0=RULE_STRING
				{
					newLeafNode(lv_universityName_1_0, grammarAccess.getUniversityAccess().getUniversityNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniversityRule());
					}
					setWithLastConsumed(
						$current,
						"universityName",
						lv_universityName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUniversityAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='location'
		{
			newLeafNode(otherlv_3, grammarAccess.getUniversityAccess().getLocationKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniversityAccess().getLocationLocationParserRuleCall_4_0());
				}
				lv_location_4_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniversityRule());
					}
					set(
						$current,
						"location",
						lv_location_4_0,
						"org.xtext.mde.a5.ErasmusPrograms.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='credits'
		{
			newLeafNode(otherlv_5, grammarAccess.getUniversityAccess().getCreditsKeyword_5());
		}
		(
			(
				lv_credits_6_0=RULE_INT
				{
					newLeafNode(lv_credits_6_0, grammarAccess.getUniversityAccess().getCreditsINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniversityRule());
					}
					setWithLastConsumed(
						$current,
						"credits",
						lv_credits_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_7='courses'
			{
				newLeafNode(otherlv_7, grammarAccess.getUniversityAccess().getCoursesKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getUniversityAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUniversityAccess().getCoursesCourseParserRuleCall_7_2_0());
					}
					lv_courses_9_0=ruleCourse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUniversityRule());
						}
						add(
							$current,
							"courses",
							lv_courses_9_0,
							"org.xtext.mde.a5.ErasmusPrograms.Course");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getUniversityAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUniversityAccess().getCoursesCourseParserRuleCall_7_3_1_0());
						}
						lv_courses_11_0=ruleCourse
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUniversityRule());
							}
							add(
								$current,
								"courses",
								lv_courses_11_0,
								"org.xtext.mde.a5.ErasmusPrograms.Course");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getUniversityAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getUniversityAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleCourse
entryRuleCourse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCourseRule()); }
	iv_ruleCourse=ruleCourse
	{ $current=$iv_ruleCourse.current; }
	EOF;

// Rule Course
ruleCourse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getCourseAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='code'
		{
			newLeafNode(otherlv_1, grammarAccess.getCourseAccess().getCodeKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCourseAccess().getColonKeyword_2());
		}
		(
			(
				lv_courseCode_3_0=RULE_STRING
				{
					newLeafNode(lv_courseCode_3_0, grammarAccess.getCourseAccess().getCourseCodeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"courseCode",
						lv_courseCode_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='name'
		{
			newLeafNode(otherlv_4, grammarAccess.getCourseAccess().getNameKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getCourseAccess().getColonKeyword_5());
		}
		(
			(
				lv_courseName_6_0=RULE_STRING
				{
					newLeafNode(lv_courseName_6_0, grammarAccess.getCourseAccess().getCourseNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"courseName",
						lv_courseName_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='faculty'
		{
			newLeafNode(otherlv_7, grammarAccess.getCourseAccess().getFacultyKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getCourseAccess().getColonKeyword_8());
		}
		(
			(
				lv_faculty_9_0=RULE_STRING
				{
					newLeafNode(lv_faculty_9_0, grammarAccess.getCourseAccess().getFacultySTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"faculty",
						lv_faculty_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='credits'
		{
			newLeafNode(otherlv_10, grammarAccess.getCourseAccess().getCreditsKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getCourseAccess().getColonKeyword_11());
		}
		(
			(
				lv_courseCredits_12_0=RULE_INT
				{
					newLeafNode(lv_courseCredits_12_0, grammarAccess.getCourseAccess().getCourseCreditsINTTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCourseRule());
					}
					setWithLastConsumed(
						$current,
						"courseCredits",
						lv_courseCredits_12_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getCourseAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='country'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocationAccess().getCountryKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLocationAccess().getColonKeyword_2());
		}
		(
			(
				lv_countryName_3_0=RULE_STRING
				{
					newLeafNode(lv_countryName_3_0, grammarAccess.getLocationAccess().getCountryNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationRule());
					}
					setWithLastConsumed(
						$current,
						"countryName",
						lv_countryName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='city'
		{
			newLeafNode(otherlv_4, grammarAccess.getLocationAccess().getCityKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getLocationAccess().getColonKeyword_5());
		}
		(
			(
				lv_cityName_6_0=RULE_STRING
				{
					newLeafNode(lv_cityName_6_0, grammarAccess.getLocationAccess().getCityNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationRule());
					}
					setWithLastConsumed(
						$current,
						"cityName",
						lv_cityName_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleAssociatePartner
entryRuleAssociatePartner returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociatePartnerRule()); }
	iv_ruleAssociatePartner=ruleAssociatePartner
	{ $current=$iv_ruleAssociatePartner.current; }
	EOF;

// Rule AssociatePartner
ruleAssociatePartner returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_partnerName_0_0=RULE_STRING
				{
					newLeafNode(lv_partnerName_0_0, grammarAccess.getAssociatePartnerAccess().getPartnerNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociatePartnerRule());
					}
					setWithLastConsumed(
						$current,
						"partnerName",
						lv_partnerName_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAssociatePartnerAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociatePartnerAccess().getTypePartnerTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=rulePartnerType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociatePartnerRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.mde.a5.ErasmusPrograms.PartnerType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssociatePartnerAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleAdmissionStructure
entryRuleAdmissionStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdmissionStructureRule()); }
	iv_ruleAdmissionStructure=ruleAdmissionStructure
	{ $current=$iv_ruleAdmissionStructure.current; }
	EOF;

// Rule AdmissionStructure
ruleAdmissionStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdmissionStructureAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='applicationProcess'
		{
			newLeafNode(otherlv_1, grammarAccess.getAdmissionStructureAccess().getApplicationProcessKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdmissionStructureAccess().getApplicationProcessApplicationProcessParserRuleCall_2_0());
				}
				lv_applicationProcess_2_0=ruleApplicationProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdmissionStructureRule());
					}
					set(
						$current,
						"applicationProcess",
						lv_applicationProcess_2_0,
						"org.xtext.mde.a5.ErasmusPrograms.ApplicationProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='requirements'
			{
				newLeafNode(otherlv_3, grammarAccess.getAdmissionStructureAccess().getRequirementsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getAdmissionStructureAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAdmissionStructureAccess().getRequierementsRequirementParserRuleCall_3_2_0());
					}
					lv_requierements_5_0=ruleRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdmissionStructureRule());
						}
						add(
							$current,
							"requierements",
							lv_requierements_5_0,
							"org.xtext.mde.a5.ErasmusPrograms.Requirement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getAdmissionStructureAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAdmissionStructureAccess().getRequierementsRequirementParserRuleCall_3_3_1_0());
						}
						lv_requierements_7_0=ruleRequirement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAdmissionStructureRule());
							}
							add(
								$current,
								"requierements",
								lv_requierements_7_0,
								"org.xtext.mde.a5.ErasmusPrograms.Requirement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getAdmissionStructureAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='results'
			{
				newLeafNode(otherlv_9, grammarAccess.getAdmissionStructureAccess().getResultsKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAdmissionStructureAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAdmissionStructureAccess().getResultsResultsParserRuleCall_4_2_0());
					}
					lv_results_11_0=ruleResults
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdmissionStructureRule());
						}
						add(
							$current,
							"results",
							lv_results_11_0,
							"org.xtext.mde.a5.ErasmusPrograms.Results");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getAdmissionStructureAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAdmissionStructureAccess().getResultsResultsParserRuleCall_4_3_1_0());
						}
						lv_results_13_0=ruleResults
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAdmissionStructureRule());
							}
							add(
								$current,
								"results",
								lv_results_13_0,
								"org.xtext.mde.a5.ErasmusPrograms.Results");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAdmissionStructureAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getAdmissionStructureAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleResults
entryRuleResults returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultsRule()); }
	iv_ruleResults=ruleResults
	{ $current=$iv_ruleResults.current; }
	EOF;

// Rule Results
ruleResults returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Year'
		{
			newLeafNode(otherlv_0, grammarAccess.getResultsAccess().getYearKeyword_0());
		}
		(
			(
				lv_year_1_0=RULE_INT
				{
					newLeafNode(lv_year_1_0, grammarAccess.getResultsAccess().getYearINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResultsRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getResultsAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='totalAdmitted'
		{
			newLeafNode(otherlv_3, grammarAccess.getResultsAccess().getTotalAdmittedKeyword_3());
		}
		(
			(
				lv_totalAdmitted_4_0=RULE_INT
				{
					newLeafNode(lv_totalAdmitted_4_0, grammarAccess.getResultsAccess().getTotalAdmittedINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResultsRule());
					}
					setWithLastConsumed(
						$current,
						"totalAdmitted",
						lv_totalAdmitted_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='scholarshipsAwarded'
		{
			newLeafNode(otherlv_5, grammarAccess.getResultsAccess().getScholarshipsAwardedKeyword_5());
		}
		(
			(
				lv_scholarshipsAwarded_6_0=RULE_INT
				{
					newLeafNode(lv_scholarshipsAwarded_6_0, grammarAccess.getResultsAccess().getScholarshipsAwardedINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResultsRule());
					}
					setWithLastConsumed(
						$current,
						"scholarshipsAwarded",
						lv_scholarshipsAwarded_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_7='admittedStudents'
			{
				newLeafNode(otherlv_7, grammarAccess.getResultsAccess().getAdmittedStudentsKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getResultsAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					lv_admittedStudents_9_0=RULE_STRING
					{
						newLeafNode(lv_admittedStudents_9_0, grammarAccess.getResultsAccess().getAdmittedStudentsSTRINGTerminalRuleCall_7_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResultsRule());
						}
						addWithLastConsumed(
							$current,
							"admittedStudents",
							lv_admittedStudents_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getResultsAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						lv_admittedStudents_11_0=RULE_STRING
						{
							newLeafNode(lv_admittedStudents_11_0, grammarAccess.getResultsAccess().getAdmittedStudentsSTRINGTerminalRuleCall_7_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getResultsRule());
							}
							addWithLastConsumed(
								$current,
								"admittedStudents",
								lv_admittedStudents_11_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getResultsAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getResultsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getDocumentRequirementParserRuleCall_0());
		}
		this_DocumentRequirement_0=ruleDocumentRequirement
		{
			$current = $this_DocumentRequirement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getDegreeRequirementParserRuleCall_1());
		}
		this_DegreeRequirement_1=ruleDegreeRequirement
		{
			$current = $this_DegreeRequirement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRequirementAccess().getLanguageRequirementParserRuleCall_2());
		}
		this_LanguageRequirement_2=ruleLanguageRequirement
		{
			$current = $this_LanguageRequirement_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDocumentRequirement
entryRuleDocumentRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentRequirementRule()); }
	iv_ruleDocumentRequirement=ruleDocumentRequirement
	{ $current=$iv_ruleDocumentRequirement.current; }
	EOF;

// Rule DocumentRequirement
ruleDocumentRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DocumentRequirement'
		{
			newLeafNode(otherlv_0, grammarAccess.getDocumentRequirementAccess().getDocumentRequirementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocumentRequirementAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='documentName'
		{
			newLeafNode(otherlv_2, grammarAccess.getDocumentRequirementAccess().getDocumentNameKeyword_2());
		}
		(
			(
				lv_documentName_3_0=RULE_STRING
				{
					newLeafNode(lv_documentName_3_0, grammarAccess.getDocumentRequirementAccess().getDocumentNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocumentRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"documentName",
						lv_documentName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='description'
		{
			newLeafNode(otherlv_4, grammarAccess.getDocumentRequirementAccess().getDescriptionKeyword_4());
		}
		(
			(
				lv_description_5_0=RULE_STRING
				{
					newLeafNode(lv_description_5_0, grammarAccess.getDocumentRequirementAccess().getDescriptionSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocumentRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDocumentRequirementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDegreeRequirement
entryRuleDegreeRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDegreeRequirementRule()); }
	iv_ruleDegreeRequirement=ruleDegreeRequirement
	{ $current=$iv_ruleDegreeRequirement.current; }
	EOF;

// Rule DegreeRequirement
ruleDegreeRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DegreeRequirement'
		{
			newLeafNode(otherlv_0, grammarAccess.getDegreeRequirementAccess().getDegreeRequirementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDegreeRequirementAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='degreeName'
		{
			newLeafNode(otherlv_2, grammarAccess.getDegreeRequirementAccess().getDegreeNameKeyword_2());
		}
		(
			(
				lv_degreeName_3_0=RULE_STRING
				{
					newLeafNode(lv_degreeName_3_0, grammarAccess.getDegreeRequirementAccess().getDegreeNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDegreeRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"degreeName",
						lv_degreeName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='fieldOfStudy'
		{
			newLeafNode(otherlv_4, grammarAccess.getDegreeRequirementAccess().getFieldOfStudyKeyword_4());
		}
		(
			(
				lv_fieldOfStudy_5_0=RULE_STRING
				{
					newLeafNode(lv_fieldOfStudy_5_0, grammarAccess.getDegreeRequirementAccess().getFieldOfStudySTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDegreeRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"fieldOfStudy",
						lv_fieldOfStudy_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='level'
		{
			newLeafNode(otherlv_6, grammarAccess.getDegreeRequirementAccess().getLevelKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDegreeRequirementAccess().getLevelDegreeLevelEnumRuleCall_7_0());
				}
				lv_level_7_0=ruleDegreeLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDegreeRequirementRule());
					}
					set(
						$current,
						"level",
						lv_level_7_0,
						"org.xtext.mde.a5.ErasmusPrograms.DegreeLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDegreeRequirementAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLanguageRequirement
entryRuleLanguageRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageRequirementRule()); }
	iv_ruleLanguageRequirement=ruleLanguageRequirement
	{ $current=$iv_ruleLanguageRequirement.current; }
	EOF;

// Rule LanguageRequirement
ruleLanguageRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LanguageRequirement'
		{
			newLeafNode(otherlv_0, grammarAccess.getLanguageRequirementAccess().getLanguageRequirementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLanguageRequirementAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='language'
		{
			newLeafNode(otherlv_2, grammarAccess.getLanguageRequirementAccess().getLanguageKeyword_2());
		}
		(
			(
				lv_languageName_3_0=RULE_STRING
				{
					newLeafNode(lv_languageName_3_0, grammarAccess.getLanguageRequirementAccess().getLanguageNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLanguageRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"languageName",
						lv_languageName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='level'
		{
			newLeafNode(otherlv_4, grammarAccess.getLanguageRequirementAccess().getLevelKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageRequirementAccess().getLevelLanguageLevelEnumRuleCall_5_0());
				}
				lv_level_5_0=ruleLanguageLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageRequirementRule());
					}
					set(
						$current,
						"level",
						lv_level_5_0,
						"org.xtext.mde.a5.ErasmusPrograms.LanguageLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLanguageRequirementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleApplicationProcess
entryRuleApplicationProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationProcessRule()); }
	iv_ruleApplicationProcess=ruleApplicationProcess
	{ $current=$iv_ruleApplicationProcess.current; }
	EOF;

// Rule ApplicationProcess
ruleApplicationProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getApplicationProcessAccess().getApplicationProcessAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getApplicationProcessAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='steps'
			{
				newLeafNode(otherlv_2, grammarAccess.getApplicationProcessAccess().getStepsKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getApplicationProcessAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationProcessAccess().getStepsStepParserRuleCall_2_2_0());
					}
					lv_steps_4_0=ruleStep
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationProcessRule());
						}
						add(
							$current,
							"steps",
							lv_steps_4_0,
							"org.xtext.mde.a5.ErasmusPrograms.Step");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getApplicationProcessAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getApplicationProcessAccess().getStepsStepParserRuleCall_2_3_1_0());
						}
						lv_steps_6_0=ruleStep
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getApplicationProcessRule());
							}
							add(
								$current,
								"steps",
								lv_steps_6_0,
								"org.xtext.mde.a5.ErasmusPrograms.Step");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getApplicationProcessAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getApplicationProcessAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Step'
		{
			newLeafNode(otherlv_0, grammarAccess.getStepAccess().getStepKeyword_0());
		}
		(
			(
				lv_stepName_1_0=RULE_STRING
				{
					newLeafNode(lv_stepName_1_0, grammarAccess.getStepAccess().getStepNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"stepName",
						lv_stepName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='description'
		{
			newLeafNode(otherlv_3, grammarAccess.getStepAccess().getDescriptionKeyword_3());
		}
		(
			(
				lv_stepDescription_4_0=RULE_STRING
				{
					newLeafNode(lv_stepDescription_4_0, grammarAccess.getStepAccess().getStepDescriptionSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"stepDescription",
						lv_stepDescription_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='startDate'
		{
			newLeafNode(otherlv_5, grammarAccess.getStepAccess().getStartDateKeyword_5());
		}
		(
			(
				lv_startDate_6_0=RULE_EDATE
				{
					newLeafNode(lv_startDate_6_0, grammarAccess.getStepAccess().getStartDateEDATETerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"startDate",
						lv_startDate_6_0,
						"org.xtext.mde.a5.ErasmusPrograms.EDATE");
				}
			)
		)
		otherlv_7='endDate'
		{
			newLeafNode(otherlv_7, grammarAccess.getStepAccess().getEndDateKeyword_7());
		}
		(
			(
				lv_endDate_8_0=RULE_EDATE
				{
					newLeafNode(lv_endDate_8_0, grammarAccess.getStepAccess().getEndDateEDATETerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStepRule());
					}
					setWithLastConsumed(
						$current,
						"endDate",
						lv_endDate_8_0,
						"org.xtext.mde.a5.ErasmusPrograms.EDATE");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getStepAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Rule ScholarshipType
ruleScholarshipType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Program_Country'
			{
				$current = grammarAccess.getScholarshipTypeAccess().getProgram_CountryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getScholarshipTypeAccess().getProgram_CountryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Partner_Country'
			{
				$current = grammarAccess.getScholarshipTypeAccess().getPartner_CountryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getScholarshipTypeAccess().getPartner_CountryEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule LanguageLevel
ruleLanguageLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='A1'
			{
				$current = grammarAccess.getLanguageLevelAccess().getA1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLanguageLevelAccess().getA1EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='A2'
			{
				$current = grammarAccess.getLanguageLevelAccess().getA2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLanguageLevelAccess().getA2EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='B1'
			{
				$current = grammarAccess.getLanguageLevelAccess().getB1EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLanguageLevelAccess().getB1EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='B2'
			{
				$current = grammarAccess.getLanguageLevelAccess().getB2EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLanguageLevelAccess().getB2EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='C1'
			{
				$current = grammarAccess.getLanguageLevelAccess().getC1EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLanguageLevelAccess().getC1EnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='C2'
			{
				$current = grammarAccess.getLanguageLevelAccess().getC2EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getLanguageLevelAccess().getC2EnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule PartnerType
rulePartnerType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Industrial'
			{
				$current = grammarAccess.getPartnerTypeAccess().getIndustrialEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPartnerTypeAccess().getIndustrialEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Academic'
			{
				$current = grammarAccess.getPartnerTypeAccess().getAcademicEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPartnerTypeAccess().getAcademicEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DegreeLevel
ruleDegreeLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Bachelor'
			{
				$current = grammarAccess.getDegreeLevelAccess().getBachelorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDegreeLevelAccess().getBachelorEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Master'
			{
				$current = grammarAccess.getDegreeLevelAccess().getMasterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDegreeLevelAccess().getMasterEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_EDATE : '0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
