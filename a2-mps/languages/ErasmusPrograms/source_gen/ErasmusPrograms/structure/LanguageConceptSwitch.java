package ErasmusPrograms.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AdmissionStructure = 0;
  public static final int ApplicationProcess = 1;
  public static final int AssociatePartner = 2;
  public static final int Course = 3;
  public static final int DegreeRequirement = 4;
  public static final int DocumentRequirement = 5;
  public static final int ErasmusProgram = 6;
  public static final int LanguageRequirement = 7;
  public static final int Location = 8;
  public static final int Requirement = 9;
  public static final int Results = 10;
  public static final int Scholarship = 11;
  public static final int Step = 12;
  public static final int University = 13;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L);
    builder.put(0x26276edc56166e57L, AdmissionStructure);
    builder.put(0x26276edc561695eeL, ApplicationProcess);
    builder.put(0x26276edc56166e4bL, AssociatePartner);
    builder.put(0x26276edc56166e35L, Course);
    builder.put(0x26276edc5616961aL, DegreeRequirement);
    builder.put(0x26276edc561695dbL, DocumentRequirement);
    builder.put(0x9d77ea4d04f30c3L, ErasmusProgram);
    builder.put(0x26276edc561695e1L, LanguageRequirement);
    builder.put(0x26276edc56166e45L, Location);
    builder.put(0x26276edc56166e6aL, Requirement);
    builder.put(0x26276edc56166e58L, Results);
    builder.put(0x26276edc56166e00L, Scholarship);
    builder.put(0x26276edc5616960aL, Step);
    builder.put(0x26276edc56166e2eL, University);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
