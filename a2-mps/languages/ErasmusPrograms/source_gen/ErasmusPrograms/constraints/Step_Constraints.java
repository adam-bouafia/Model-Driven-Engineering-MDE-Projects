package ErasmusPrograms.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Step_Constraints extends BaseConstraintsDescriptor {
  public Step_Constraints() {
    super(CONCEPTS.Step$nH);
  }

  public static class StartDate_Property extends BasePropertyConstraintsDescriptor {
    public StartDate_Property(ConstraintsDescriptor container) {
      super(PROPS.startDate$kRIt, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castString(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:d62249e9-1888-40f9-9c51-bbbb092b81e0(ErasmusPrograms.constraints)", "4676225400724432902"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, String propertyValue) {
      return propertyValue.matches("([0-9]{2})/([0-9]{2})/([0-9]{4})");
    }
  }
  public static class EndDate_Property extends BasePropertyConstraintsDescriptor {
    public EndDate_Property(ConstraintsDescriptor container) {
      super(PROPS.endDate$kX_Q, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castString(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:d62249e9-1888-40f9-9c51-bbbb092b81e0(ErasmusPrograms.constraints)", "4676225400724600084"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, String propertyValue) {
      return propertyValue.matches("([0-9]{2})/([0-9]{2})/([0-9]{4})");
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.startDate$kRIt, new StartDate_Property(this));
    properties.put(PROPS.endDate$kX_Q, new EndDate_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Step$nH = MetaAdapterFactory.getConcept(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc5616960aL, "ErasmusPrograms.structure.Step");
  }

  private static final class PROPS {
    /*package*/ static final SProperty startDate$kRIt = MetaAdapterFactory.getProperty(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc5616960aL, 0x26276edc56169610L, "startDate");
    /*package*/ static final SProperty endDate$kX_Q = MetaAdapterFactory.getProperty(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc5616960aL, 0x26276edc56169614L, "endDate");
  }
}
