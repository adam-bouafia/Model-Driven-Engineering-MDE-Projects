package ErasmusPrograms.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AdmissionStructure_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ApplicationProcess_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new AssociatePartner_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Course_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DegreeRequirement_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new DocumentRequirement_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ErasmusProgram_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new LanguageRequirement_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Location_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Results_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Scholarship_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new Step_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new University_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e57L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc561695eeL), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e4bL), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e35L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc5616961aL), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc561695dbL), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x9d77ea4d04f30c3L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc561695e1L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e45L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e58L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e00L), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc5616960aL), MetaIdFactory.conceptId(0x45d743938b794afaL, 0x9cc9d68d79ce89e1L, 0x26276edc56166e2eL)).seal();
}
